# Schema for specific subset of XHTML used by the spec

start = element html { attribute lang { token }, head, body }

head = element head { title & meta & style & link* & script* }
title = element title { text }
meta = element meta { attribute charset { "utf-8" } }
style = element style {
  attribute type { "text/css" },
  text
}
link = element link { attribute rel { token }, attribute href { string} }
script = element script { attribute src { string } }

body = element body { h1, block*, section2* }

# Blocks

block = p|ul|ol|pre|pre.grammar|table

# Headings

h1 = element h1 { h.model }

section2 = element section { section2.class?, h2, block*, section3* }
section2.class =   attribute class { "toc" | "appendix" }
h2 = element h2 { h.model }

section3 = element section { h3, block*, section4* }
h3 = element h3 { h.model }

section4 = element section { h4, block*, section5* }
h4 = element h4 { h.model }

section5 = element section { h5, block* }
h5 = element h5 { h.model }

h.model = attribute id { token }?, inline.content

# Paragraphs

p = element p { attribute class { "status" }?, inline.content }
pre = element pre { inline.content }
pre.grammar = element pre {
  attribute class { "grammar" },
  mixed { element code|em|dfn|abbr { text }* }
}

# Lists

ol = element ol { li+ }
ul = element ul { li+ }
li = element li { inline.content, (ul|ol)* }

# Tables

table = element table { tr+ }
tr = element tr { (th|td)* }
td = element td { tcell.model }
th = element th { tcell.model }
tcell.model = tcell.rowspan?, tcell.colspan?, inline.content
tcell.rowspan = attribute rowspan { token }
tcell.colspan = attribute colspan { token }

# Inline

inline = code|var|em|strong|a|sub|sup|br
inline.content = mixed { inline* }

code = element code { attribute class { "grammar" }?, inline.content }
var = element var { inline.content }
em = element em { inline.content }
strong = element strong { inline.content }
sub = element sub { inline.content }
sup = element sup { inline.content }
br = element br { empty }
a = element a {
  attribute href { text },
  attribute type { text }?,
  inline.content
}
